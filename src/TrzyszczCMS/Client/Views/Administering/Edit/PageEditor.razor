@layout AdminLayout
@page "/manage/edit-page"

@using Core.Application.Enums
@using Core.Shared.Enums
@using TrzyszczCMS.Client.Data.Enums.Extensions
@using TrzyszczCMS.Client.Views.Shared.Editors
@using TrzyszczCMS.Client.Views.Shared.Grids
@using TrzyszczCMS.Client.ViewModels.Administering.Edit
@inject PageEditorViewModel ViewModel


@if (this.ViewModel.IsManagingPossible)
{
    @switch (this.ViewModel.EditedPageDepositVM.CurrentManagementTool)
    {
        case PageManagementTool.PageLayoutComposer:
            <nav class="d-flex">
                <h1 class="me-auto">@(this.ViewModel.EditedPageDepositVM.PageEditorMode == PageEditorMode.Create ? "Creating" : "Editing") page</h1>
                <div class="d-flex mt-auto mb-1">
                    <div class="input-group input-group-sm">
                        <span class="input-group-text"><i class="fas fa-plus"></i></span>
                        <select class="form-select form-select-sm" aria-label="Add module">
                            <option disabled selected>Add module</option>
                            @foreach (var sgType in Enum.GetValues(typeof(PageModuleType)).Cast<PageModuleType>().OrderBy(i => i.GetTranslation()))
                            {
                                <option value="@sgType" @onclick="@(() => ViewModel.AddModule(sgType))">@sgType.GetTranslation()</option>
                            }
                        </select>
                        <button class="btn btn-sm btn-primary"><i class="fas fa-save"></i>&nbsp;Apply changes</button>
                    </div>
                </div>
            </nav>
            <section>
                <Grid Items="ViewModel.EditedPageDepositVM.ModuleContents" MultiSelect="false">
                    <Header>
                        <GridColHeader SearchBoxType="SearchBoxType.None" Title="Module type" />
                        <GridColHeader SearchBoxType="SearchBoxType.None" Title="Actions" Width="250" />
                    </Header>
                    <RowTemplate Context="row">
                        <td>@row.Data.GetModuleType().GetTranslation() @row.GetHashCode()</td>
                        <td>
                            <div class="input-group input-group-sm">
                                @if (row.Data.GetModuleType() == PageModuleType.TextWall)
                                {
                                    <span class="input-group-text"><i class="fas fa-edit"></i></span>
                                    <select class="form-select form-select-sm" aria-label="Edit">
                                        <option disabled selected>Edit</option>
                                        @foreach (var sgType in Enum.GetValues(typeof(TextWallEditedPart)).Cast<TextWallEditedPart>())
                                        {
                                            <option value="@sgType" @onclick="@(() => ViewModel.EditModule(row, sgType))">@sgType.GetTranslation()</option>
                                        }
                                    </select>
                                }
                                else
                                { 
                                    <button class="btn btn-sm btn-primary" @onclick="@(() => ViewModel.EditModule(row))"><i class="fas fa-edit"></i>&nbsp;Edit</button>
                                }
                                <button class="btn btn-sm btn-primary" @onclick="@(() => ViewModel.RemoveModule(row))"><i class="fas fa-minus"></i>&nbsp;Remove</button>
                            </div>
                        </td>
                    </RowTemplate>
                    <NoRowsTemplate>
                        There are not any modules for this page.
                    </NoRowsTemplate>
                </Grid>
            </section>
            break;

        case PageManagementTool.TextWallSectionEditor:
        case PageManagementTool.TextWallLeftAsideEditor:
        case PageManagementTool.TextWallRightAsideEditor:
            <MarkDownEditor MarkDownCode="@ViewModel.CurrentlyEditedMarkDownCode"
                            ShowSizingSelect="@(this.ViewModel.EditedPageDepositVM.CurrentManagementTool == PageManagementTool.TextWallSectionEditor)"
                            OnEditorExiting="@ViewModel.OnEditorExiting"
                            OnMarkDownChanged="@ViewModel.OnMarkDownCodeChanged"
                            MaxPreviewedPageWidth="@ViewModel.CurrentlyEditedSectionWidth"/>
            break;

        default:
            <span>There should be an another management tool.</span>
            break;
    }



}
else
{
    <span>If you want to create or edit a page, select one.</span>
}
