@page "/sign-in"
@layout ViewportMiddleYLayout

@using System.Security.Claims
@using ViewModels.SignIn
@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject SignInViewModel ViewModel


<div class="container mx-auto w-100">
    <div class="row justify-content-center">
        <section class="card col-9 col-sm-6 col-lg-4 border-0">
            <div class="card-header bg-transparent border-0 text-center">
                <span aria-hidden="true">TRZYSZCZ CMS</span>
            </div>
            <div class="card-body bg-transparent">
                <EditForm Model="@ViewModel" OnValidSubmit="@(() => ViewModel.SignInUser(() => NavigationManager.NavigateTo("/dashboard")))">
                    <div class="my-2">
                        <label class="mb-1">Login</label>
                        <InputText class="form-control w-100" @bind-Value="@ViewModel.Username" />
                    </div>
                    <div class="my-2">
                        <label class="mb-1">Password</label>
                        <input type="password" class="form-control w-100" @bind="@ViewModel.Password" />
                    </div>
                    <div class="my-2">
                        <label>
                            <InputCheckbox @bind-Value="ViewModel.RememberMe" />&nbsp;Remember me
                        </label>
                    </div>
                    <div class="my-2">
                        <button type="submit" class="form-control w-100 btn btn-primary">
                            <span class="oi oi-account-login" aria-hidden="true"></span>&nbsp;Sign in
                        </button>
                    </div>
                    <div class="alert alert-danger my-2" role="alert"
                            style="text-align:left; font-weight:bold; visibility: @(string.IsNullOrEmpty(@ViewModel.ErrorMessage) ? "collapse" : "visible");">
                        <span class="col-12">@ViewModel.ErrorMessage</span>
                    </div>
                </EditForm>
            </div>
        </section>
    </div>
</div>

@code {
    
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        ClaimsPrincipal claimsPrincipal = (await AuthStateProvider.GetAuthenticationStateAsync()).User;

        if (claimsPrincipal.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/dashboard");
        }

        await base.OnAfterRenderAsync(firstRender);
    }
}
