@page "/sign-in"
@layout ViewportMiddleYLayout

@using Client.Data 
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using ViewModels.SignIn

@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject SignInViewModel ViewModel


<div class="container mx-auto w-100">
    <div class="row justify-content-center">
        <section class="card col-9 col-sm-6 col-lg-4 border-0">
            <div class="card-header bg-transparent border-0 text-center">
                <CmsLogo />
            </div>
            <div class="card-body bg-transparent">
                <EditForm Model="@ViewModel" OnValidSubmit="@(() => ViewModel.SignInUser(() => { NavigationManager.NavigateTo(Constants.AFTER_SIGN_IN_IMMEDIATE_PAGE_URL); this.StateHasChanged(); }))">
                    <div class="form-floating my-3">
                        <input type="text" id="usernameInput" class="form-control w-100" @bind="@ViewModel.Username" />
                        <label for="usernameInput">Login</label>
                    </div>
                    <div class="form-floating my-3">
                        <input id="userPassword" type="password" class="form-control w-100" @bind="@ViewModel.Password" />
                        <label for="userPassword">Password</label>
                    </div>
                    <div class="my-3">
                        <label>
                            <input type="checkbox" class="form-check-input" @bind="ViewModel.RememberMe" />&nbsp;Remember me
                        </label>
                    </div>
                    <div class="my-3">
                        <button type="submit" class="form-control w-100 btn btn-primary">
                            <i class="fas fa-sign-in-alt" aria-hidden="true"></i>&nbsp;Sign in
                        </button>
                    </div>
                    <div class="alert alert-danger my-3" role="alert"
                            style="text-align:left; font-weight:bold; visibility: @(string.IsNullOrEmpty(@ViewModel.ErrorMessage) ? "collapse" : "visible");">
                        <span class="col-12">@ViewModel.ErrorMessage</span>
                    </div>
                </EditForm>
            </div>
            <div class="card-footer bg-transparent border-0">
                <NavLink href="/">Back to home page</NavLink>
            </div>
        </section>
    </div>
</div>

@code {
    
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        ClaimsPrincipal claimsPrincipal = (await AuthStateProvider.GetAuthenticationStateAsync()).User;

        if (claimsPrincipal.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo(Constants.AFTER_SIGN_IN_IMMEDIATE_PAGE_URL);
        }
        // TODO: Add spinner indicating the process of signing in.
        await base.OnAfterRenderAsync(firstRender);
    }
}
